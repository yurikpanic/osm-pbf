package btreepbf;

message Bnode {
    enum Kind {
        LEAF = 0;
        NODE = 1;
    }
    required Kind kind = 1 [default = LEAF];
    repeated uint64 keys = 2 [packed = true];
    repeated uint64 pointers = 3 [packed = true];
    repeated uint64 child_sizes = 4 [packed = true];
    repeated bytes values = 5;
}

message Btree {
    repeated Bnode nodes = 1;
}

message BtreePartEntry {
    required uint64 blob_num = 1;
    required uint64 min_node = 2;
    required uint64 max_node = 3;
}

message BtreeIndex {
    optional string type = 1;
    optional string field = 2;
    required uint32 max_children = 3;
    repeated BtreePartEntry entries = 4;
}